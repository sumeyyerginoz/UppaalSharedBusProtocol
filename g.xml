<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.6//EN" "http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd">
<nta>
    <declaration>
        broadcast chan request[3];
        broadcast chan grant[3];
        broadcast chan release[3];
        
        const int N = 3;
        const int MAX_WAIT = 100;
        const int MAX_USAGE = 30;
        const int MIN_USAGE = 10;
        
        bool bus_busy = false;
        int current_device = -1;
        
        int[0,2] priorities[3] = {2, 1, 0};
        int waiting_time[3] = {0, 0, 0};
        
        void update_priorities(int device_id) {
            int i;
            priorities[device_id] = 0;
            for(i = 0; i &lt; N; i++) {
                if(i != device_id &amp;&amp; priorities[i] &lt; 2) {
                    priorities[i] = priorities[i] + 1;
                }
            }
            waiting_time[device_id] = 0;
        }
    </declaration>
    
    <template>
        <name>Device</name>
        <parameter>const int id</parameter>
        <declaration>
            clock x;
            bool requesting = false;
        </declaration>
        
        <location id="id0" x="0" y="0">
            <name x="-10" y="-30">IDLE</name>
        </location>
        
        <location id="id1" x="80" y="80">
            <name x="60" y="110">REQUESTING</name>
        </location>
        
        <location id="id2" x="160" y="0">
            <name x="150" y="-30">USING_BUS</name>
            <label kind="invariant" x="130" y="15">x &lt;= MAX_USAGE</label>
        </location>
        
        <init ref="id0"/>
        
        <transition>
            <source ref="id0"/>
            <target ref="id1"/>
            <label kind="guard">!bus_busy</label>
            <label kind="synchronisation">request[id]!</label>
            <label kind="assignment">
                x = 0,
                requesting = true
            </label>
        </transition>
        
        <transition>
            <source ref="id1"/>
            <target ref="id2"/>
            <label kind="synchronisation">grant[id]?</label>
            <label kind="assignment">
                x = 0,
                requesting = false,
                bus_busy = true,
                current_device = id
            </label>
        </transition>
        
        <transition>
            <source ref="id2"/>
            <target ref="id0"/>
            <label kind="guard">x &gt;= MIN_USAGE</label>
            <label kind="synchronisation">release[id]!</label>
            <label kind="assignment">
                bus_busy = false,
                current_device = -1,
                update_priorities(id)
            </label>
        </transition>
    </template>
    
    <template>
        <name>Arbiter</name>
        <declaration>
            bool requests[N];
            
            void inc_waiting() {
                int j;
                for(j = 0; j &lt; N; j++) {
                    if(requests[j]) {
                        waiting_time[j]++;
                    }
                }
            }
            
            int dynamic_score(int i) {
                return priorities[i] + waiting_time[i];
            }
            
            int select_device() {
                int selected = -1;
                int best_score = -1;
                int i;
                for(i = 0; i &lt; N; i++) {
                    if(requests[i]) {
                        int score = dynamic_score(i);
                        if(score &gt; best_score) {
                            best_score = score;
                            selected = i;
                        }
                    }
                }
                return selected;
            }
        </declaration>
        
        <location id="id6" x="0" y="0">
            <name x="-10" y="-30">IDLE</name>
        </location>
        
        <location id="id7" x="100" y="60">
            <name x="90" y="30">CHECKING</name>
            <committed/>
        </location>
        
        <init ref="id6"/>
        
        <transition>
            <source ref="id6"/>
            <target ref="id7"/>
            <label kind="synchronisation">request[0]?</label>
            <label kind="assignment">
                requests[0] = true,
                inc_waiting()
            </label>
        </transition>
        
        <transition>
            <source ref="id6"/>
            <target ref="id7"/>
            <label kind="synchronisation">request[1]?</label>
            <label kind="assignment">
                requests[1] = true,
                inc_waiting()
            </label>
        </transition>
        
        <transition>
            <source ref="id6"/>
            <target ref="id7"/>
            <label kind="synchronisation">request[2]?</label>
            <label kind="assignment">
                requests[2] = true,
                inc_waiting()
            </label>
        </transition>
        
        <transition>
            <source ref="id7"/>
            <target ref="id6"/>
            <label kind="guard">select_device() != -1 &amp;&amp; !bus_busy</label>
            <label kind="synchronisation">grant[select_device()]!</label>
            <label kind="assignment">
                requests[select_device()] = false
            </label>
        </transition>
        
        <transition>
            <source ref="id7"/>
            <target ref="id6"/>
            <label kind="guard">select_device() == -1 || bus_busy</label>
        </transition>
    </template>
    
    <system>
        d0 = Device(0);
        d1 = Device(1);
        d2 = Device(2);
        arbiter = Arbiter();
        system d0, d1, d2, arbiter;
    </system>
    
    <queries>
        <query>
            <formula>A[] (d2.USING_BUS imply d2.x &lt;= MAX_USAGE)</formula>
        </query>
        <query>
            <formula>A[] (d2.REQUESTING imply d2.x &lt;= MAX_WAIT)</formula>
        </query>
        <query>
            <formula>A[] (d1.REQUESTING imply d1.x &lt;= MAX_WAIT)</formula>
        </query>
        <query>
            <formula>A[] (d0.REQUESTING imply d0.x &lt;= MAX_WAIT)</formula>
        </query>
        <query>
            <formula>A[] (d0.USING_BUS imply d0.x &lt;= MAX_USAGE)</formula>
        </query>
        <query>
            <formula>A[] (d1.USING_BUS imply d1.x &lt;= MAX_USAGE)</formula>
        </query>
        <query>
            <formula>d2.REQUESTING --&gt; d2.USING_BUS</formula>
        </query>
        <query>
            <formula>d1.REQUESTING --&gt; d1.USING_BUS</formula>
        </query>
        <query>
            <formula>d0.REQUESTING --&gt; d0.USING_BUS</formula>
        </query>
        <query>
            <formula>A[] not ((d0.USING_BUS &amp;&amp; d1.USING_BUS) || (d1.USING_BUS &amp;&amp; d2.USING_BUS) || (d0.USING_BUS &amp;&amp; d2.USING_BUS))</formula>
        </query>
        <query>
            <formula>A[] not deadlock</formula>
        </query>
    </queries>
</nta>
